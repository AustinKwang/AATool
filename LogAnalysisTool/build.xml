<project basedir="." default="publish" name="LogAnalysisTool">
	<target name="init" description="设置初始化打 war 包需要的路径变量">
		<property name="name" value="LogAnalysisTool" />
		<property name="src" value="${basedir}/src" />
		<property name="lib" value="${basedir}/WebContent/WEB-INF/lib" />
		<property name="webapp" value="${basedir}/WebContent" />
		<property name="packages" value="ant.*" />

		<property name="build.src" value="${basedir}/AntBuild/LogAnalysisTool/src" />
		<!-- web部署目录中的class文件，在WEB-INF目录下  -->
		<property name="build.class" value="${basedir}/AntBuild/LogAnalysisTool/WEB-INF/classes" />
		<!-- war解压后的文件目录，可以直接copy到服务器中 -->
		<property name="build.dest" value="${basedir}/AntBuild/LogAnalysisTool" />
		<property name="build.javadocs" value="${basedir}/AntBuild/doc" />
		<property name="jar.dest" value="${basedir}/AntBuild/jar" />
		<property name="war.dest" value="${basedir}/AntBuild/war" />

		<property name="tomcat.home" value="D:\Program Files\Apache Software Foundation\apache-tomcat-8.0.12" />
		<property name="JAVA_HOME" value="C:\Program Files\Java\jdk1.8.0">
		</property>

		<path id="classpath">
			<fileset dir="${lib}">
				<include name="**/*.jar" />
			</fileset>
		</path>
	</target>

	<target name="prepare" depends="init" description="创建打包需要的路径，拷贝源文件到打包路径下">
		<mkdir dir="${build.src}" />
		<mkdir dir="${build.class}" />
		<mkdir dir="${build.dest}" />
		<mkdir dir="${jar.dest}" />
		<mkdir dir="${war.dest}" />
		<copy todir="${build.src}">
			<fileset dir="${src}" />
		</copy>
		<copy todir="${build.dest}">
			<fileset dir="${webapp}" />
		</copy>
	</target>

	<target name="build" depends="prepare" description="编译 java 文件，拷贝 properties 属性配置文件到编译后的路径下">
		<javac srcdir="${build.src}" destdir="${build.class}" includeantruntime="false" debug="true">
			<classpath refid="classpath" />
		</javac>
		<copy todir="${build.class}">
			<fileset dir="${build.src}">
				<include name="**/*.properties" />
				<include name="**/*.xml" />
			</fileset>
		</copy>
	</target>

	<target name="antwar" depends="build" description="打 war 包，不将 java 文件打入包内">
		<delete dir="${build.src}" />
		<war warfile="${war.dest}/LogAnalysisTool.war" webxml="${build.dest}/WEB-INF/web.xml">
			<lib dir="${build.dest}/WEB-INF/lib" />
			<!--  不需要copy class文件了，因为在build的时候已经copy进去了，如果用此命令，会自动将src中的文件copy过去
				<classes dir="${build.class}"/>
				 -->

			<fileset dir="${build.dest}" />
		</war>
	</target>

	<target name="publish" depends="antwar,clean" description="发布 war 包至 tomcat 目录下">
		<delete dir="${tomcat.home}/webapps/LogAnalysisTool">
		</delete>
		<delete file="${tomcat.home}/webapps/LogAnalysisTool.war">
		</delete>
		<copy todir="${tomcat.home}/webapps">
			<fileset dir="${war.dest}">
				<include name="**/*.war" />
			</fileset>
		</copy>
	</target>

	<!--
			<target name="javadoc" depends="build" description="生成 java 的 API 帮助文档">
		<mkdir dir="${build.javadocs}"/>
		<javadoc packagenames="${packages}" sourcepath="${build.src}" destdir="${build.javadocs}" author="true" version="true" use="true" splitindex="true" windowtitle="${name} API" doctitle="${name}">
			<classpath refid="classpath"/>
		</javadoc>
	</target>
		 -->


	<target name="clean" depends="init" description="清除打包用临时文件">
		<delete dir="${build.src}" />
		<delete>
			<fileset dir="${build.class}" includes="**/*.classes" />
		</delete>
		<delete dir="${build.dest}" />
	</target>

	<!-- Start/stop/debug from Zip Tomcat-->
	<target name="start-tomcat" depends="publish" description="tomcat starting.....">
		<exec executable="${tomcat.home}/bin/startup.bat" spawn="true" vmlauncher="false">
			<env key="CATALINA_OPTS" value="-server -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8082" />
			<env key="CATALINA_HOME" value="${tomcat.home}" />
			<arg line="/c start ${tomcat.home}/bin/startup.bat" />
		</exec>
	</target>

	<target name="stop-tomcat" description="tomcat stoping.....">
		<exec executable="${tomcat.home}/bin/shutdown.bat" spawn="true" vmlauncher="false">
			<env key="JAVA_HOME" value="${JAVA_HOME}" />
			<env key="CATALINA_HOME" value="${tomcat.home}" />
			<arg line="/c start ${tomcat.home}/bin/shutdown.bat" />
		</exec>
	</target>

	<target name="debug-tomcat" depends="publish" description="tomcat starting.....">
		<exec executable="${tomcat.home}/bin/startup.bat" spawn="true" vmlauncher="false">
			<env key="CATALINA_OPTS" value="-server -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8082" />
			<env key="CATALINA_HOME" value="${tomcat.home}" />
			<arg line="/c start ${tomcat.home}/bin/startup.bat" />
		</exec>
	</target>
	<!-- End Start/stop/debug from Zip Tomcat-->

	<!-- Start/stop/debug from Tomcat service(Installers)-->
	<target name="start-tomcat_service">
		<java jar="${tomcat.home}/bin/bootstrap.jar" fork="true">
			<jvmarg value="-Dcatalina.home=${tomcat.home}" />
		</java>
	</target>

	<target name="stop-tomcat_service">
		<java jar="${tomcat.home}/bin/bootstrap.jar" fork="true">
			<jvmarg value="-Dcatalina.home=${tomcat.home}" />
			<jvmarg value="encoding UTF-8">
			</jvmarg>
			<arg line="stop" />
		</java>
		<waitfor maxwait="5" maxwaitunit="second">
			<available file="errors.log" />
		</waitfor>
	</target>

	<target name="debug-tomcat_service">
		<java jar="${tomcat.home}/bin/bootstrap.jar" fork="true">
			<jvmarg value="-Dcatalina.home=${tomcat.home}" />
			<jvmarg value="-Xdebug" />
			<jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n" />
		</java>
	</target>
	<!-- End  Start/stop/debug from Tomcat service(Installers)-->

	<target name="re-start Tomcat">
		<antcall id="stop" target="stop-tomcat" />
		<antcall id="start" target="start-tomcat" />
	</target>
</project>